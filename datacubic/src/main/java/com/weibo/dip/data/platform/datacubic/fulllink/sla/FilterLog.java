package com.weibo.dip.data.platform.datacubic.fulllink.sla;

import org.apache.spark.SparkConf;
import org.apache.spark.api.java.JavaRDD;
import org.apache.spark.api.java.JavaSparkContext;

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * Created by yurun on 17/7/11.
 */
public class FilterLog {

    public static void main(String[] args) {
        String[] seeds = {"81880052", "81398052", "79352050", "77705050", "75777051", "74301059", "74057", "72789059", "72585056", "70642052", "70574058", "70250052", "67679054", "65396059", "6307353050", "6307352052", "6307351058", "6307351055", "6307350059", "6307349059", "6307349058", "6307349056", "6307349054", "6307348058", "6307348051", "6307347052", "6307347051", "6307346059", "6307346056", "6307346052", "6307346050", "6307345059", "6307345058", "6307345056", "6307345051", "6307345050", "6307343053", "6307343050", "6307342058", "6307342054", "6307342051", "6307342050", "6307339058", "6307339054", "6307339053", "6307338059", "6307338055", "6307338051", "6307337059", "6307337051", "6307336055", "6307335059", "6307335056", "6307335054", "6307334055", "6307334050", "6307333057", "6307333055", "6307333050", "6307332058", "6307332055", "6307331057", "6307331051", "6307328059", "6307328058", "6307328057", "6307328055", "6307328052", "6307328050", "6307326058", "6307326052", "6307326050", "6307325058", "6307325057", "6307324057", "6307324055", "6307324052", "6307322057", "6307322056", "6307322052", "6307322051", "6307321052", "6307321050", "6307320059", "6307320054", "6307320052", "6307320051", "6307320050", "6307319059", "6307319055", "6307318055", "6307317059", "6307317055", "6307316057", "6307316053", "6307316052", "6307315055", "6307315050", "6307314056", "6307313059", "6307313052", "6307313051", "6307313050", "6307312053", "6307311054", "6307310050", "6307309059", "6307309058", "6307309055", "6307309054", "6307308052", "6307308050", "6307307059", "6307307055", "6307307050", "6307306057", "6307306053", "6307306050", "6307305054", "6307305052", "6307304056", "6307304055", "6307303052", "6307302059", "6307302054", "6307302053", "6307301058", "6307301056", "6307301053", "6307300052", "6307299053", "6307298057", "6307297058", "6307297057", "6307296059", "6307296056", "6307296052", "6307295059", "6307295058", "6307295057", "6307295053", "6307293058", "6307293054", "6307292057", "6307292055", "6307291056", "6307291054", "6307291050", "6307290056", "6307290054", "6307290052", "6307289057", "6307288054", "6307288051", "6307287057", "6307286053", "6307286050", "6307285055", "6307285050", "6307284059", "6307284055", "6307284054", "6307284051", "6307283052", "6307282057", "6307282051", "6307281057", "6307281052", "6307281050", "6307280059", "6307280055", "6307280052", "6307279054", "6307277058", "6307277054", "6307277053", "6307277051", "6307276053", "6307275055", "6307275051", "6307274058", "6307273056", "6307273051", "6307272053", "6307272051", "6307271057", "6307271056", "6307271055", "6307271052", "6307270051", "6307269057", "6307269052", "6307269050", "6307268056", "6307268051", "6307268050", "6307266056", "6307265054", "6307265053", "6307264057", "6307264052", "6307263052", "6307263051", "6307262058", "6307261055", "6307261053", "6307261052", "6307260058", "6307260057", "6307260054", "6307260052", "6307260051", "6307259051", "6307258059", "6307258057", "6307258056", "6307258052", "6307258051", "6307257057", "6307257056", "6307257055", "6307256057", "6307256056", "6307255059", "6307255058", "6307255054", "6307254057", "6307254056", "6307254050", "6307252058", "6307251059", "6307251055", "6307250056", "6307250052", "6307250051", "6307249059", "6307249058", "6307249050", "6307248058", "6307248053", "6307248052", "6307247058", "6307247051", "6307246059", "6307246056", "6307246055", "6307245055", "6307245053", "6307244054", "6307244050", "6307243058", "6307243050", "6307242057", "6307242054", "6307242052", "6307242050", "6307241057", "6307241056", "6307241054", "6307241052", "6307240056", "6307239058", "6307239056", "6307238058", "6307238056", "6307238052", "6307237059", "6307237055", "6307237054", "6307237051", "6307234053", "6307234050", "6307233055", "6307233053", "6307233051", "6307232058", "6307232055", "6307232054", "6307231058", "6307231057", "6307231053", "6307230059", "6307230056", "6307230054", "6307229058", "6307229056", "6307228059", "6307228053", "6307226054", "6307225056", "6307224055", "6307224050", "6307223056", "6307222052", "6307221054", "6307221051", "6307220059", "6307220057", "6307220056", "6307219058", "6307219051", "6307218052", "6307218050", "6307217051", "6307217050", "6307216059", "6307216055", "6307216051", "6307215055", "6307215054", "6307215053", "6307215052", "6307214052", "6307214050", "6307213055", "6307213050", "6307212058", "6307212055", "6307212051", "6307212050", "6307211053", "6307210056", "6307209059", "6307209056", "6307208054", "6307207057", "6307207055", "6307206059", "6307205054", "6307205053", "6307204054", "6307204051", "6307203054", "6307203053", "6307203050", "6307202056", "6307202053", "6307202052", "6307201059", "6307201052", "6307200056", "6307200055", "6307199057", "6307199055", "6307198056", "6307197055", "6307197052", "6307196056", "6307195059", "6307195056", "6307195051", "6307195050", "6307194059", "6307194051", "6307193056", "6307193054", "6307193050", "6307192057", "6307192054", "6307190059", "6307190057", "6307189057", "6307189053", "6307189052", "6307188059", "6307188051", "6307187059", "6307186055", "6307185050", "6307184058", "6307184056", "6307184050", "6307183058", "6307183057", "6307183053", "6307183050", "6307182059", "6307182056", "6307182053", "6307181050", "6307180056", "6307180055", "6307180054", "6307180052", "6307179051", "6307179050", "6307178054", "6307178051", "6307178050", "6307177058", "6307177054", "6307177053", "6307177052", "6307177051", "6307176058", "6307175059", "6307175052", "6307174058", "6307174056", "6307173059", "6307173056", "6307173051", "6307172054", "6307172050", "6307171053", "6307171050", "6307170059", "6307170055", "6307170052", "6307169053", "6307169052", "6307169051", "6307168055", "6307168053", "6307168052", "6307167058", "6307166057", "6307165055", "6307165053", "6307164052", "6307163052", "6307163051", "6307162059", "6307161058", "6307161057", "6307160058", "6307160055", "6307159058", "6307159056", "6307159054", "6307159050", "6307158058", "6307158053", "6307157050", "6307156051", "6307155055", "6307155052", "6307154052", "6307154051", "6307153056", "6307153055", "6307153054", "6307153051", "6307153050", "6307152053", "6307152052", "6307152050", "6307151059", "6307151057", "6307151055", "6307151051", "6307150058", "6307150056", "6307150052", "6307150051", "6307150050", "6307149052", "6307148054", "6307148053", "6307147058", "6307147057", "6307147055", "6307147053", "6307146058", "6307146053", "6307145059", "6307144055", "6307144053", "6307144050", "6307143059", "6307143057", "6307143052", "6307142058", "6307142054", "6307142050", "6307141058", "6307141055", "6307141054", "6307141053", "6307141051", "6307140057", "6307139057", "6307139056", "6307139055", "6307139054", "6307139053", "6307139051", "6307138056", "6307138050", "6307137055", "6307136057", "6307136055", "6307136051", "6307136050", "6307135052", "6307134059", "6307134057", "6307134053", "6307133059", "6307133054", "6307133053", "6307132058", "6307132056", "6307132055", "6307132052", "6307131056", "6307130054", "6307129059", "6307128059", "6307128056", "6307128052", "6307126055", "6307126054", "6307126053", "6307125056", "6307125051", "6307124056", "6307124050", "6307123059", "6307122055", "6307122050", "6307121056", "6307120058", "6307120054", "6307119057", "6307119052", "6307119050", "6307118058", "6307118057", "6307118056", "6307117051", "6307116051", "6307116050", "6307115053", "6307115052", "6307114054", "6307114051", "6307113057", "6307113056", "6307113053", "6307113052", "6307113051", "6307113050", "6307112059", "6307112050", "6307111054", "6307110059", "6307109059", "6307108058", "6307108055", "6307108051", "6307108050", "6307107057", "6307106059", "6307106056", "6307106053", "6307106051", "6307105059", "6307105053", "6307105050", "6307104059", "6307104058", "6307104056", "6307104055", "6307104053", "6307104050", "6307103055", "6307103051", "6307102058", "6307102057", "6307101059", "6307101055", "6307101050", "6307100059", "6307100056", "6307100053", "6307100050", "6307099058", "6307098056", "6307098055", "6307097059", "6307096058", "6307096057", "6307095058", "6307095057", "6307095052", "6307094059", "6307094058", "6307094057", "6307094055", "6307094053", "6307094050", "6307093057", "6307093052", "6307093051", "6307092059", "6307092058", "6307092051", "6307091056", "6307090057", "6307089059", "6307089057", "6307089056", "6307089055", "6307089052", "6307088058", "6307088054", "6307088053", "6307087057", "6307087054", "6307087053", "6307086057", "6307086056", "6307086054", "6307086052", "6307085052", "6307085050", "6307084058", "6307084057", "6307084055", "6307084054", "6307083052", "6307083050", "6307082056", "6307082055", "6307082054", "6307082050", "6307081059", "6307081057", "6307081056", "6307081050", "6307080057", "6307080054", "6307079059", "6307079052", "6307078056", "6307078055", "6307078054", "6307077058", "6307076057", "6307076052", "6307075051", "6307074055", "6307074054", "6307073053", "6307073051", "6307073050", "6307072058", "6307072054", "6307072051", "6307071054", "6307071050", "6307070058", "6307070055", "6307070053", "6307070052", "6307070051", "6307070050", "6307069059", "6307068057", "6307068055", "6307068053", "6307067058", "6307067056", "6307067055", "6307066057", "6307066053", "6307066051", "6307065059", "6307065056", "6307065055", "6307065051", "6307065050", "6307064058", "6307064055", "6307064054", "6307064050", "6307063057", "6307063053", "6307063051", "6307062058", "6307062057", "6307062055", "6307062053", "6307061058", "6307061057", "6307061052", "6307060052", "6307059058", "6307059057", "6307059050", "6307058059", "6307058057", "6307058054", "6307058053", "6307057058", "6307057053", "6307057050", "6307056058", "6307056053", "6307056050", "6307055053", "6307054056", "6307054051", "6307052052", "6307052051", "6307051058", "6307051057", "6307050053", "6307050051", "6307049056", "6307049054", "6307048059", "6307047058", "6307047056", "6307045058", "6307045052", "6307044058", "6307044056", "6307044050", "6307043058", "6307043057", "6307043054", "6307042054", "6307042053", "6307042052", "6307041059", "6307040059", "6307040058", "6307040057", "6307040055", "6307039056", "6307039050", "6307038058", "6307038051", "6307037054", "6307037050", "6307036054", "6307036051", "6307035056", "6307035053", "6307034057", "6307034056", "6307034052", "6307033052", "6307033051", "6307032058", "6307032055", "6307032050", "6307030056", "6307030050", "6307029058", "6307029056", "6307029055", "6307029052", "6307029051", "6307028052", "6307027057", "6307027056", "6307027055", "6307026052", "6307025057", "6307025052", "6307024052", "6307022054", "6307021051", "6307017058", "6307015058", "6307015050", "6307013052", "6307012054", "6307012053", "6307011056", "6307009058", "6307009051", "6307007055", "6307007054", "6307007053", "6307005059", "6307005053", "6307004057", "6307004054", "6307003057", "6307003052", "6307002053", "6307002050", "6307000059", "6307000057", "6307000051", "6306997054", "6306997051", "6306996051", "6306995055", "6306995050", "6306994053", "6306994052", "6306992058", "6306992057", "6306991051", "6306990058", "6306990055", "6306990052", "6306989056", "6306989054", "6306988059", "6306988056", "6306988054", "6306988052", "6306710055", "6306709055", "6306709054", "6306708059", "6306708058", "6306708053", "6306708051", "6306706059", "6306706055", "6306705058", "6306705053", "6306704057", "6306704055", "6306704053", "6306704050", "6306703058", "6306703054", "6306702058", "6306701050", "6306700050", "6306699057", "6306699051", "6306697059", "6306697056", "6306697055", "6306696059", "6306696058", "6306696055", "6306696054", "6306696051", "6306696050", "6306695057", "6306695055", "6306695051", "6306694058", "6306694056", "6306694050", "6306692057", "6306692054", "6306692053", "6306692050", "6306691059", "6306691056", "6306691050", "6306689059", "6306689053", "6306688054", "6306688053", "6306688050", "6306687059", "6306686056", "6306686055", "6306686051", "6306685057", "6306685055", "6306685054", "6306684051", "6306683056", "6306682057", "6306682056", "6306681055", "6306681051", "6306680056", "6306680050", "6306679057", "6306678059", "6306677058", "6306677053", "6306677050", "6306676059", "6306676055", "6306676054", "6306675057", "6306675050", "6306673056", "6306673052", "6306672054", "6306672052", "6306672051", "6306672050", "6306671059", "6306671051", "6306670059", "6306670054", "6306669056", "6306668056", "6306668055", "6306667055", "6306666058", "6306666057", "6306666053", "6306665058", "6306664059", "6306664051", "6306663057", "6306663056", "6306663054", "6306662054", "6306662053", "6306662051", "6306661058", "6306661055", "6306661051", "6306660050", "6306659053", "6306658057", "6306658054", "6306658050", "6306657056", "6306657054", "6306655059", "6306655055", "6306655052", "6306653059", "6306653056", "6306652057", "6306652054", "6306652051", "6306651059", "6306651058", "6306650059", "6306650057", "6306650056", "6306650055", "6306650052", "6306649056", "6306649054", "6306649053", "6306648055", "6306647053", "6306646058", "6306646057", "6306646052", "6306645054", "6306645051", "6306644051", "6306643055", "6306643052", "6306643050", "6306641059", "6306641057", "6306641055", "6306641052", "6306641050", "6306640056", "6306640053", "6306640050", "6306639059", "6306639058", "6306638053", "6306637054", "6306637051", "6306636059", "6306636056", "6306636055", "6306636052", "6306636050", "6306635054", "6306634057", "6306634052", "6306634051", "6306633058", "6306633057", "6306633055", "6306633052", "6306631058", "6306631050", "6306629059", "6306629056", "6306628056", "6306625059", "6306623057", "6306623056", "6306623051", "6306622059", "6306621059", "6306621057", "6306621055", "6306620054", "6306618058", "6306618057", "6306618054", "6306618053", "6306618052", "6306617052", "6306616059", "6306616058", "6306616057", "6306615055", "6306615053", "6306615052", "6306614053"};

        Set<String> uids = new HashSet<>();

        for (String seed : seeds) {
            uids.add(seed);
        }

        Pattern pattern = Pattern.compile("^.*\"uid\":\"(\\d+)\".*$");

        SparkConf conf = new SparkConf();

        JavaSparkContext context = new JavaSparkContext();

        JavaRDD<String> lineRDD = context.textFile(args[0]);

        lineRDD
            .map(line -> {
                Matcher matcher = pattern.matcher(line);

                if (matcher.matches()) {
                    String uid = matcher.group(1);

                    if (uids.contains(uid)) {
                        return line;
                    }
                }

                return null;
            })
            .filter(Objects::nonNull)
            .repartition(30)
            .saveAsTextFile(args[1]);

        context.stop();
    }

}
